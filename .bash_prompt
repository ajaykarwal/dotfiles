# Set TERM for proper color support in modern terminals
if [[ "$COLORTERM" == gnome-* && "$TERM" == xterm ]] && infocmp gnome-256color &>/dev/null; then
  export TERM='gnome-256color'
elif infocmp xterm-256color &>/dev/null; then
  export TERM='xterm-256color'
fi

# --- Git status in prompt ---
prompt_git() {
  local symbols=""
  local branch=""

  if git rev-parse --is-inside-work-tree &>/dev/null; then
    if [[ "$(git rev-parse --is-inside-git-dir 2>/dev/null)" == 'false' ]]; then
      git update-index --really-refresh -q &>/dev/null

      ! git diff --quiet --ignore-submodules --cached && symbols+='+'
      ! git diff-files --quiet --ignore-submodules -- && symbols+='!'
      [[ -n "$(git ls-files --others --exclude-standard)" ]] && symbols+='?'
      git rev-parse --verify refs/stash &>/dev/null && symbols+='$'
    fi

    branch=$(git symbolic-ref --quiet --short HEAD 2>/dev/null || \
             git rev-parse --short HEAD 2>/dev/null || \
             echo '(unknown)')

    [[ -n "$symbols" ]] && symbols=" [${symbols}]"

    echo "%F{white} on %F{magenta}${branch}%F{blue}${symbols}"
  fi
}

# --- Prompt colors ---
cyan="%F{cyan}"
white="%F{white}"
reset="%f"

# --- Prompt ---
# `%~` = current dir, `%(!.#.$)` = show `#` if root, `$` otherwise
# `%(...)` runs command substitution at prompt render time (Zsh-specific)
PROMPT="${cyan}%~%(?.$(prompt_git).)${white} \$ ${reset}"

# PS2 for multiline input
PS2="%F{yellow}â†’ %f"
